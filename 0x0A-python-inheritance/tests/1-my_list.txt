Test Case For MyList class

>>> MyList = __import__('1-my_list').MyList

#Test 1 : testing a list
>>> MyList([1,3,4,5])
[1, 3, 4, 5]

#Test2 :testing a sorted list
>>> MyList([1,4,10,3,0,5]).print_sorted()
[0, 1, 3, 4, 5, 10]

#Test3 : testing a sorted list of string
>>> MyList(["Hello", "world","cat"]).print_sorted()
['Hello', 'cat', 'world']

#Test 4: testing a sorted list of string and integer
>>> MyList(["Hello", "world",12]).print_sorted()
Traceback (most recent call last):
  ...
TypeError: '<' not supported between instances of 'int' and 'str'

#Test 5: testing a sorted list of float and integer
>>> MyList([12,0.1,9,9.4]).print_sorted()
[0.1, 9, 9.4, 12]

#Test 6: testing a sorted empty list
>>> MyList([]).print_sorted()
[]

#Test 4: testing a non list
>>> MyList(1)
Traceback (most recent call last):
  ...
TypeError: 'int' object is not iterable

#Test 5: testing integers and list as args
>>> MyList(1, [2,3,7,5])
Traceback (most recent call last):
  ...
TypeError: list expected at most 1 argument, got 2

>>> mylist = MyList([1, 2, 3])
>>> str(mylist)
'[1, 2, 3]'

>>> mylist = MyList([])
>>> mylist.print_sorted()
[]
